import streamlit as st
from utils.ai_service import get_ai_response
from utils.tts_service import text_to_speech

def render():
    """Hi·ªÉn th·ªã trang t√≥m t·∫Øt vƒÉn b·∫£n"""
    # ƒê·∫ßu trang c√≥ bi·ªÉu t∆∞·ª£ng h·∫•p d·∫´n
    col1, col2 = st.columns([1, 9])
    with col1:
        st.image("https://cdn-icons-png.flaticon.com/512/2665/2665093.png", width=60)
    with col2:
        st.header("T√≥m t·∫Øt vƒÉn b·∫£n")
    
    # Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu ch∆∞a cung c·∫•p API key
    if not st.session_state.api_key:
        st.info("üîë Vui l√≤ng nh·∫≠p Google AI API Key trong ph·∫ßn c√†i ƒë·∫∑t ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng t√≥m t·∫Øt", icon="‚ÑπÔ∏è")
    
    # V√πng nh·∫≠p vƒÉn b·∫£n v·ªõi placeholder h·ªØu √≠ch
    text_to_summarize = st.text_area(
        "Nh·∫≠p vƒÉn b·∫£n c·∫ßn t√≥m t·∫Øt",
        height=250,
        placeholder="D√°n vƒÉn b·∫£n d√†i c·ªßa b·∫°n v√†o ƒë√¢y ƒë·ªÉ AI t√≥m t·∫Øt th√†nh nh·ªØng √Ω ch√≠nh...",
        key="summary_input"
    )
    
    # C√°c t√πy ch·ªçn t√≥m t·∫Øt
    col1, col2 = st.columns(2)
    with col1:
        summary_length = st.select_slider(
            "ƒê·ªô d√†i b·∫£n t√≥m t·∫Øt",
            options=["R·∫•t ng·∫Øn", "Ng·∫Øn", "Trung b√¨nh", "D√†i", "Chi ti·∫øt"],
            value="Trung b√¨nh",
            key="summary_length"
        )
    with col2:
        summary_style = st.radio(
            "Phong c√°ch",
            options=["T√≥m l∆∞·ª£c", "ƒêi·ªÉm ch√≠nh", "Ph√¢n t√≠ch"],
            horizontal=True,
            key="summary_style"
        )
    
    # N√∫t t√≥m t·∫Øt ƒë·∫πp h∆°n
    summarize_button = st.button("üìù T√≥m t·∫Øt ngay", use_container_width=True, type="primary", key="summarize_btn")
    
    # X·ª≠ l√Ω khi nh·∫•n n√∫t t√≥m t·∫Øt
    if summarize_button:
        if not text_to_summarize:
            st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p vƒÉn b·∫£n c·∫ßn t√≥m t·∫Øt", icon="üìÑ")
            return
            
        if not st.session_state.api_key:
            st.error("‚ö†Ô∏è B·∫°n c·∫ßn nh·∫≠p API Key tr∆∞·ªõc khi s·ª≠ d·ª•ng t√≠nh nƒÉng n√†y", icon="üîí")
            return
            
        with st.spinner("AI ƒëang t√≥m t·∫Øt vƒÉn b·∫£n..."):
            # T·∫°o prompt d·ª±a tr√™n c√°c t√πy ch·ªçn ng∆∞·ªùi d√πng
            prompt = f"""H√£y t√≥m t·∫Øt vƒÉn b·∫£n sau v·ªõi ƒë·ªô d√†i {summary_length.lower()} 
            theo phong c√°ch {summary_style.lower()}. ƒê·∫£m b·∫£o gi·ªØ l·∫°i c√°c √Ω ch√≠nh v√† 
            b·ªè qua c√°c chi ti·∫øt kh√¥ng quan tr·ªçng:\n\n{text_to_summarize}"""
            
            summary = get_ai_response(
                prompt, 
                st.session_state.selected_model, 
                st.session_state.api_key
            )
            
            # Hi·ªÉn th·ªã k·∫øt qu·∫£ trong m·ªôt container ƒë·∫πp m·∫Øt
            st.success("‚úÖ T·∫°o b·∫£n t√≥m t·∫Øt th√†nh c√¥ng!")
            result_container = st.container(border=True)
            with result_container:
                st.subheader("üìã B·∫£n t√≥m t·∫Øt")
                st.markdown(summary)
                
                # Chuy·ªÉn b·∫£n t√≥m t·∫Øt th√†nh gi·ªçng n√≥i
                with st.spinner("ƒêang chuy·ªÉn ƒë·ªïi th√†nh gi·ªçng n√≥i..."):
                    audio_path = text_to_speech(
                        summary, 
                        st.session_state.tts_language, 
                        st.session_state.tts_speed
                    )
                    if audio_path:
                        st.audio(audio_path, format="audio/mp3")
                        
                        # T·∫°o n√∫t t·∫£i xu·ªëng vƒÉn b·∫£n v√† √¢m thanh
                        col1, col2 = st.columns(2)
                        with col1:
                            with open(audio_path, "rb") as file:
                                st.download_button(
                                    label="üîä T·∫£i xu·ªëng √¢m thanh",
                                    data=file,
                                    file_name="summary.mp3",
                                    mime="audio/mp3",
                                    use_container_width=True,
                                    key="download_audio_btn"
                                )
                        with col2:
                            st.download_button(
                                label="üìÑ T·∫£i xu·ªëng vƒÉn b·∫£n",
                                data=summary,
                                file_name="summary.txt",
                                mime="text/plain",
                                use_container_width=True,
                                key="download_text_btn"
                            )